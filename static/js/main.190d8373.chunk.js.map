{"version":3,"sources":["CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectedCurrency","onChangeCurrency","onChangeAmount","amount","className","type","value","onChange","autoFocus","map","option","key","BASE_URL","App","toAmount","fromAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","useEffect","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAEe,SAASA,EAAYC,GAAQ,IAExCC,EAKED,EALFC,gBACAC,EAIEF,EAJFE,iBACAC,EAGEH,EAHFG,iBACAC,EAEEJ,EAFFI,eACAC,EACEL,EADFK,OAEF,OACE,yBAAKC,UAAU,gBACb,2BACEC,KAAK,SACLD,UAAU,QACVE,MAAOH,EACPI,SAAUL,IAEZ,4BAAQM,WAAS,EAACF,MAAON,EAAkBO,SAAUN,GAClDF,EAAgBU,KAAI,SAACC,GAAD,OACnB,4BAAQC,IAAKD,EAAQJ,MAAOI,GACzBA,QCjBb,IAAME,EAAW,yCAqEFC,MApEf,WAAgB,IAQVC,EAAUC,EARD,EACiCC,mBAAS,IAD1C,mBACNjB,EADM,KACWkB,EADX,OAE2BD,qBAF3B,mBAENE,EAFM,KAEQC,EAFR,OAGuBH,qBAHvB,mBAGNI,EAHM,KAGMC,EAHN,OAI2BL,qBAJ3B,mBAINM,EAJM,KAIQC,EAJR,OAKeP,mBAAS,GALxB,mBAKNb,EALM,KAKEqB,EALF,OAM2CR,oBAAS,GANpD,mBAMNS,EANM,KAMgBC,EANhB,KA+Cb,OArCID,GACFV,EAAaZ,EACbW,EAAWX,EAASmB,IAEpBR,EAAWX,EACXY,EAAaZ,EAASmB,GAGxBK,qBAAU,WACRC,MAAMhB,GACHiB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,OAAO,GAC9CnB,EAAmB,CAACe,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UACnDjB,EAAgBa,EAAKK,MACrBhB,EAAcY,GACdV,EAAgBS,EAAKI,MAAMH,SAE9B,IAEHN,qBAAU,WACY,MAAhBT,GAAsC,MAAdE,GAC1BQ,MAAM,GAAD,OAAIhB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IAC/CS,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUT,EAAgBS,EAAKI,MAAMhB,SAE9C,CAACF,EAAcE,IAYhB,oCACE,kDACA,kBAACvB,EAAD,CACEE,gBAAiBA,EACjBC,iBAAkBkB,EAClBjB,iBAAkB,SAACqC,GAAD,OAAOnB,EAAgBmB,EAAEC,OAAOjC,QAClDJ,eAhBN,SAAgCoC,GAC9Bd,EAAUc,EAAEC,OAAOjC,OACnBoB,GAAwB,IAepBvB,OAAQY,IAEV,kBAAClB,EAAD,CACEE,gBAAiBA,EACjBC,iBAAkBoB,EAClBnB,iBAAkB,SAACqC,GAAD,OAAOjB,EAAciB,EAAEC,OAAOjC,QAChDJ,eAnBN,SAA8BoC,GAC5Bd,EAAUc,EAAEC,OAAOjC,OACnBoB,GAAwB,IAkBpBvB,OAAQW,MC/DhB0B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.190d8373.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function CurrencyRow(props) {\n  const {\n    currencyOptions,\n    selectedCurrency,\n    onChangeCurrency,\n    onChangeAmount,\n    amount,\n  } = props;\n  return (\n    <div className=\"coverter-row\">\n      <input\n        type=\"number\"\n        className=\"input\"\n        value={amount}\n        onChange={onChangeAmount}\n      />\n      <select autoFocus value={selectedCurrency} onChange={onChangeCurrency}>\n        {currencyOptions.map((option) => (\n          <option key={option} value={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport CurrencyRow from \"./CurrencyRow\";\n\nconst BASE_URL = \"https://api.exchangeratesapi.io/latest\";\nfunction App() {\n  const [currencyOptions, setCurrencyOptions] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState();\n  const [toCurrency, setToCurrency] = useState();\n  const [exchangeRate, setExchangeRate] = useState();\n  const [amount, setAmount] = useState(1);\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\n\n  let toAmount, fromAmount;\n\n  if (amountInFromCurrency) {\n    fromAmount = amount;\n    toAmount = amount * exchangeRate;\n  } else {\n    toAmount = amount;\n    fromAmount = amount / exchangeRate;\n  }\n\n  useEffect(() => {\n    fetch(BASE_URL)\n      .then((res) => res.json())\n      .then((data) => {\n        const firstCurrency = Object.keys(data.rates)[0];\n        setCurrencyOptions([data.base, ...Object.keys(data.rates)]);\n        setFromCurrency(data.base);\n        setToCurrency(firstCurrency);\n        setExchangeRate(data.rates[firstCurrency]);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (fromCurrency != null && toCurrency != null) {\n      fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n        .then((res) => res.json())\n        .then((data) => setExchangeRate(data.rates[toCurrency]));\n    }\n  }, [fromCurrency, toCurrency]);\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(true);\n  }\n  function handleToAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(false);\n  }\n\n  return (\n    <>\n      <h1>Currency Converter</h1>\n      <CurrencyRow\n        currencyOptions={currencyOptions}\n        selectedCurrency={fromCurrency}\n        onChangeCurrency={(e) => setFromCurrency(e.target.value)}\n        onChangeAmount={handleFromAmountChange}\n        amount={fromAmount}\n      />\n      <CurrencyRow\n        currencyOptions={currencyOptions}\n        selectedCurrency={toCurrency}\n        onChangeCurrency={(e) => setToCurrency(e.target.value)}\n        onChangeAmount={handleToAmountChange}\n        amount={toAmount}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}